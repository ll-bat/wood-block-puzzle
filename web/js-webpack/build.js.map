{"version":3,"sources":["webpack://project-webpack/./src/app.js","webpack://project-webpack/./src/core/drawer/Layout.js","webpack://project-webpack/./src/core/drawer/concrete/relax/RandomFiguresDrawer.js","webpack://project-webpack/./src/core/drawer/figures/FigureDrawer.js","webpack://project-webpack/./src/core/drawer/figures/Figures.js","webpack://project-webpack/./src/core/drawer/figures/leaves/AllFigures.js","webpack://project-webpack/./src/core/drawer/figures/leaves/Figure.js","webpack://project-webpack/./src/core/events/FigureMover.js","webpack://project-webpack/./src/general/Android.js","webpack://project-webpack/./src/general/Constants.js","webpack://project-webpack/./src/general/Custom.js","webpack://project-webpack/./src/negotiators/DomNegotiator.js","webpack://project-webpack/./src/shared/store/Boxes.js","webpack://project-webpack/./src/shared/store/Config.js","webpack://project-webpack/./src/shared/store/leaves/Box.js","webpack://project-webpack/./src/shared/store/leaves/State.js","webpack://project-webpack/webpack/bootstrap","webpack://project-webpack/webpack/runtime/define property getters","webpack://project-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://project-webpack/webpack/runtime/make namespace object","webpack://project-webpack/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAA2C;AACa;AAC2B;AACnC;AACK;;AAErD,8DAAa;AACb,QAAQ,+DAAa;;AAErB,6DAAY;;AAEZ,0FAAyB;AACzB,QAAQ,+DAAa;;AAErB,yFAAwB;;AAExB,sBAAsB,gFAAsB;AAC5C;AACA,IAAI,sEAAqB;AACzB,CAAC,E;;;;;;;;;;;;;;;;;ACnB6C;AACE;AACR;;AAExC;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,iEAAmB,QAAQ,qEAAuB;AACzE,uBAAuB,sDAAM;AAC7B;AACA,0BAA0B,8DAAgB;AAC1C,0BAA0B,8DAAgB;AAC1C;;AAEA,YAAY,6DAAa;AACzB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA,QAAQ,8DAAY;;AAEpB,uBAAuB,KAAK,qEAAuB,CAAC;AACpD,YAAY,+DAAa;;AAEzB,2BAA2B,KAAK,kEAAoB,CAAC;AACrD,6BAA6B,gEAAkB,QAAQ,+DAAiB;AACxE,6BAA6B,iEAAmB,OAAO,+DAAiB;;AAExE,gBAAgB,8DAAY,KAAK,OAAO;AACxC;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,KAAK,qEAAuB,CAAC;AACpD,2BAA2B,KAAK,kEAAoB,CAAC;AACrD,4BAA4B,4DAAU;AACtC;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;AACA,iBAAiB,wDAAQ;AACzB;AACA,oBAAoB,gEAAkB;AACtC,qBAAqB,iEAAmB;AACxC;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iEAAe,OAAO,E;;;;;;;;;;;;;;;;;AC5FmC;AACZ;AACa;;AAE1D;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,QAAQ,2EAAiB;;AAEzB,iCAAiC,+DAAU;AAC3C;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;AACA,+BAA+B,0DAAa;AAC5C,YAAY,qFAA2B,EAAE,qBAAqB;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iEAAe,mBAAmB,E;;;;;;;;;;;;;;;;;ACtDiB;AACR;AACN;;;AAGrC;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,0CAA0C,mDAAM;AAChD;AACA;;AAEA,qBAAqB,wDAAQ;AAC7B;AACA;AACA,SAAS;;AAET,mBAAmB,gEAAkB;AACrC,mBAAmB,iEAAmB;;AAEtC;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,MAAM;AAC7B;AACA;AACA,yBAAyB,eAAe;AACxC,qBAAqB,OAAO;AAC5B;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,wDAAQ;AACrC;AACA;AACA;AACA;AACA,oCAAoC,gEAAkB;AACtD;AACA,qBAAqB;;AAErB,oBAAoB,6DAAa;AACjC;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA,iEAAe,aAAa,E;;;;;;;;;;;;;;;;;AC5DS;AACQ;AACF;;AAE3C;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uDAAU;AACrC,4BAA4B,uDAAU;AACtC,+BAA+B,mDAAM;;AAErC;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAkB;AACrC,SAAS;AACT,sCAAsC,KAAK;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;ACvDxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,UAAU,E;;;;;;;;;;;;;;;AClGV;AACf;AACA,oBAAoB;AACpB,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,C;;;;;;;;;;;;;;;;;;ACfwC;AACQ;AACW;AACV;;AAEjD;AACA;AACA;AACA;AACA,sBAAsB;AACtB,0BAA0B;AAC1B;AACA,cAAc,qBAAqB;AACnC;;AAEA,QAAQ,2DAAW;AACnB;;AAEA,8BAA8B,iEAAa;AAC3C;;AAEA,YAAY,6DAAa;AACzB;AACA;AACA,aAAa;;AAEb;AACA,YAAY,6DAAa;AACzB;AACA,aAAa;;AAEb;AACA,SAAS;;AAET,QAAQ,2DAAW,CAAC,2DAAa;AACjC;AACA;;AAEA;AACA,YAAY,6DAAa;AACzB;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,mBAAmB,eAAe;AAClC,YAAY,6DAAa;AACzB;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA,QAAQ,2DAAW;AACnB,YAAY,2DAAa;AACzB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,sDAAM;AACzB;AACA,mBAAmB,wDAAQ;AAC3B,YAAY,uEAAyB;AACrC;;AAEA;AACA;AACA;;AAEA;AACA,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;ACzF5B;AACA;;AAEA,iEAAe,OAAO,E;;;;;;;;;;;;;;;ACHsB;;AAE5C;AACA;AACA,WAAW,wEAAqB;AAChC,YAAY,yEAAsB;AAClC,aAAa,yEAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;AChCW;;AAEpC;AACA;AACA,eAAe,iEAA2B;AAC1C,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA,0BAA0B;AAC1B,yBAAyB;AACzB;AACA;AACA;AACA,KAAK;;AAEL;AACA,0BAA0B;AAC1B,yBAAyB;AACzB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,kBAAkB,iEAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,IAAI,E;;;;;;;;;;;;;;;ACtDkB;;AAEtB;AACf;AACA,cAAc;AACd;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,sDAAM;AAC7B;;AAEA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;;;;ACxC+B;;AAE/B;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA,gBAAgB,gDAAG,EAAE,OAAO;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iEAAe,MAAM,E;;;;;;;;;;;;;;;AC/BuB;;AAE5C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,YAAY,qDAAO;AACnB;AACA,uCAAuC,KAAK;AAC5C;AACA;AACA;AACA;AACA,mCAAmC,KAAK;AACxC;AACA;AACA,KAAK;AACL;AACA,YAAY,qDAAO;AACnB,oBAAoB;AACpB;AACA,gBAAgB;AAChB,KAAK;AACL;AACA,YAAY,qDAAO;AACnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,YAAY,qDAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,MAAM,E;;;;;;;;;;;;;;AC/CN;AACf,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA,0BAA0B,OAAO;AACjC,8BAA8B;AAC9B;AACA,yBAAyB,oBAAoB;AAC7C,qCAAqC,qBAAqB;AAC1D,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA,iEAAe,KAAK,E;;;;;;UCpBpB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"build.js","sourcesContent":["import $layout from \"./core/drawer/Layout\";\nimport DomNegotiator from \"./negotiators/DomNegotiator\";\nimport $randomFigureDrawer from \"./core/drawer/concrete/relax/RandomFiguresDrawer\";\nimport STATE from \"./shared/store/leaves/State\";\nimport $figureMover from \"./core/events/FigureMover\";\n\n$layout.setup(\n    new DomNegotiator('#content'));\n\n$layout.draw();\n\n$randomFigureDrawer.setup(\n    new DomNegotiator('#figures'));\n\n$randomFigureDrawer.draw();\n\nconst randomFigures = STATE.relax.getFigures();\nrandomFigures.forEach(figureObj => {\n    $figureMover.register(figureObj);\n});","import $boxes from \"../../shared/store/Boxes\";\nimport CONSTANTS from \"../../general/Constants\";\nimport FUNC from \"../../general/Custom\";\n\nclass Layout {\n    /**\n     * @type {DomNegotiator}\n     * @var _domNegotiator\n     */\n\n    constructor() {\n        this._domNegotiator = null;\n    }\n\n    /**\n     * @param layoutNegotiator {DomNegotiator}\n     */\n    setup(layoutNegotiator) {\n        this._domNegotiator = layoutNegotiator;\n    }\n\n    draw() {\n        this.initBoxes()\n        this.drawLayout();\n        this.customizeBoardSize();\n    }\n\n    customizeBoardSize($height = null) {\n        if (!$height) {\n            $height = (CONSTANTS.boxHeight + 3) * CONSTANTS.boxesOnColumn;\n            $height += FUNC.$('#site-navbar').offsetHeight;\n            $height += 30;\n            if ($height > CONSTANTS.height) {\n                $height = CONSTANTS.height - 100;\n            }\n\n            FUNC.setStyle(this._domNegotiator.getElement(), {\n                height: $height + 'px'\n            });\n        } else {\n            console.log('all done');\n        }\n    }\n\n    initBoxes() {\n        $boxes.reset()\n\n        for (let i = 0; i < CONSTANTS.boxesOnColumn; i++) {\n            $boxes.addRow();\n\n            for (let j = 0; j < CONSTANTS.boxesOnRow; j++) {\n                let x = j * (CONSTANTS.boxWidth + 1) + CONSTANTS.offsetX\n                let y = i * (CONSTANTS.boxHeight + 1) +CONSTANTS.offsetY\n\n                $boxes.addAt(i, { x, y });\n            }\n        }\n    }\n\n    drawLayout() {\n        this._domNegotiator.clearHtml();\n\n        for (let i = 0; i < CONSTANTS.boxesOnColumn; i++) {\n            for (let j = 0; j < CONSTANTS.boxesOnRow; j++) {\n                const box = $boxes.get(i,j);\n                this.drawOneBlock(box)\n            }\n        }\n    }\n\n    /**\n     * @param box {Box}\n     */\n    drawOneBlock(box) {\n        let el = FUNC.elt('div', \"box\", null, {\n            position: 'absolute',\n            width: (CONSTANTS.boxWidth) + \"px\",\n            height: (CONSTANTS.boxHeight) + \"px\",\n            left: box.getCoordinateX() + 'px',\n            top: box.getCoordinateY() + 'px',\n            background: '#1E1E1E', //rgba(0,0,0,.02)\n            border: '2px solid black' //1px solid rgba(0,0,0,.051)\n        })\n\n        el.onmousedown = (e) => e.preventDefault()\n\n        this._domNegotiator.append(el)\n        box.setReferenceDiv(el);\n    }\n}\n\nconst $layout = new Layout();\nexport default $layout;","import AllFigures from \"../../figures/leaves/AllFigures\";\nimport $figures from \"../../figures/Figures\";\nimport STATE from \"../../../../shared/store/leaves/State\";\n\nclass RandomFiguresDrawer {\n    constructor() {\n    }\n\n    /**\n     * @param domNegotiator {DomNegotiator}\n     */\n    setup(domNegotiator) {\n        this._domNegotiator = domNegotiator;\n    }\n\n\n    draw($figuresCount = 3) {\n        this.ensureProperties();\n\n        STATE.relax.clear();\n\n        const keys = Object.keys(AllFigures);\n        const figuresLength = keys.length;\n\n        for (let i = 0; i < $figuresCount; i++) {\n            const randomNumber = this.getRandomNumber(figuresLength);\n            const figure = keys[randomNumber];\n            const divElement = $figures.draw(figure);\n            STATE.relax.addRandomFigure({ figure, divElement });\n            this._domNegotiator.append(divElement);\n        }\n    }\n\n    getRandomNumber($lessThan = 1e9, $moreThan = 0) {\n        const diff = $lessThan - $moreThan;\n        let randNumber = Math.floor(Math.random() * diff);\n        if (randNumber === diff) {\n            randNumber--;\n        }\n\n        randNumber += $moreThan;\n        return randNumber;\n    }\n\n    ensureProperties() {\n        const isOk = this._domNegotiator != null;\n        if (!isOk) {\n            throw new DOMException('Please specify the DomNegotiator for RandomFigureDrawer');\n        }\n    }\n\n}\n\nconst $randomFigureDrawer = new RandomFiguresDrawer();\nexport default $randomFigureDrawer;","import CONSTANTS from \"../../../general/Constants\";\nimport FUNC from \"../../../general/Custom\";\nimport Figure from \"./leaves/Figure\";\n\n\nclass FigureDrawer {\n    /**\n     * @param figureObjOrPattern {Figure|Array}\n     * @param scaleK\n     */\n    draw(figureObjOrPattern, scaleK = 3) {\n        if (figureObjOrPattern instanceof Figure) {\n            figureObjOrPattern = figureObjOrPattern.pattern;\n        }\n\n        let boxDiv = FUNC.elt(\"div\", \"box\", null, {\n            position: \"relative\",\n            userSelect: 'none',\n        });\n\n        const bw = CONSTANTS.boxWidth / scaleK;\n        const bh = CONSTANTS.boxHeight / scaleK;\n\n        this.drawFigureWithDetails(figureObjOrPattern, bw, bh, boxDiv);\n        return boxDiv;\n    }\n\n    /**\n     *\n     * @param pattern {Array} the figure pattern\n     * @param bw width of the one block\n     * @param bh height of the one block\n     * @param parentDiv {HTMLDivElement} parent div where each blocked should be appended\n     * @param style {Object} extra style for each block\n     */\n    drawFigureWithDetails(pattern, bw, bh, parentDiv, style = {}) {\n        pattern.forEach((r, i) => {\n            r.forEach((c, j) => {\n                if (pattern[i][j] !== \".\") {\n                    let l = j * (bw + 3);\n                    let t = i * (bh + 3);\n\n                    let el = FUNC.elt(\"div\", null, null, {\n                        top: t + \"px\",\n                        left: l + \"px\",\n                        width: bw + \"px\",\n                        height: bh + \"px\",\n                        background: CONSTANTS.boxColor,\n                        position: \"absolute\",\n                    })\n\n                    FUNC.setStyle(el, style)\n                    parentDiv.append(el);\n                }\n            })\n        })\n    }\n}\n\nconst $figureDrawer = new FigureDrawer();\nexport default $figureDrawer;","import Figure from \"./leaves/Figure\";\nimport AllFigures from \"./leaves/AllFigures\";\nimport $figureDrawer from \"./FigureDrawer\";\n\nclass Figures {\n    /**\n     * @type {Array}\n     * @var allFigures\n     */\n\n    constructor() {\n        this.allFigures = [];\n        /**\n         * TYPE_1: new Figure(pattern),\n         * TYPE_2: new Figure(pattern),\n         * ...\n         */\n        for (let figure in AllFigures) {\n            const pattern = AllFigures[figure].figure;\n            this[figure] = new Figure(figure, pattern);\n\n            this.allFigures.push({\n                name: figure,\n                figure: pattern\n            });\n        }\n    }\n\n    /**\n     * @param type {string}\n     * @param scaleK\n     */\n    draw(type, scaleK = 3) {\n        if (this.hasFigure(type)) {\n            const figureObj = this.getFigure(type);\n            return $figureDrawer.draw(figureObj, scaleK);\n        } else {\n            throw new DOMException(`${type} figure does not exist`);\n        }\n    }\n\n    hasFigure(type) {\n        return this[type] !== null;\n    }\n\n    /**\n     * @param type {string}\n     * @return {Figure}\n     */\n    getFigure(type) {\n        return this[type];\n    }\n}\n\nconst $figures = new Figures();\nexport default $figures;\n\n","const AllFigures = {\n    TYPE_1: {\n        figure: `\n               ###\n               #\n               #\n             `,\n        name: 'TYPE_1'\n    },\n\n    TYPE_2: {\n        figure: `\n               ##\n               ##\n             `,\n        name: 'TYPE_2'\n    },\n\n    TYPE_3: {\n        figure: `\n               ##\n               #\n             `,\n        name: 'TYPE_3'\n    },\n\n    TYPE_4: {\n        figure: `\n               ###\n             `,\n        name: 'TYPE_4'\n    },\n\n    TYPE_5: {\n        figure: `\n               #\n               #\n               #\n             `,\n        name: 'TYPE_5'\n    },\n\n    TYPE_6: {\n        figure: `\n               ###\n               ###\n               ###\n             `,\n        name: 'TYPE_6'\n    },\n\n    TYPE_7: {\n        figure: `\n               #####\n             `,\n        name: 'TYPE_7'\n    },\n\n    TYPE_8: {\n        figure: `\n               ####\n             `,\n        name: 'TYPE_8'\n    },\n\n    TYPE_9: {\n        figure: `\n               #\n               #\n               #\n               #\n             `,\n        name: 'TYPE_9'\n    },\n\n    TYPE_11: {\n        figure: `\n              .#\n              ##\n             `,\n        name: 'TYPE_11'\n    },\n\n    TYPE_12: {\n        figure: `\n            # \n            #\n           `,\n        name: 'TYPE_12'\n    },\n\n    TYPE_13: {\n        figure: `\n          ##          \n         `,\n        name: 'TYPE_13'\n    }\n}\n\nexport default AllFigures;","\nexport default class Figure {\n    /**\n     * @param name {string}\n     * @param pattern {string}\n     */\n    constructor(name, pattern) {\n        this.name = name;\n\n        this.pattern = pattern.split(\"\\n\")\n            .map(c => c.trim())\n            .filter(c => c)\n            .map(c => c.split(\"\"))\n    }\n\n}","import FUNC from \"../../general/Custom\";\nimport CONSTANTS from \"../../general/Constants\";\nimport $figureDrawer from \"../drawer/figures/FigureDrawer\";\nimport $figures from \"../drawer/figures/Figures\";\n\nclass FigureMover {\n    constructor() {\n    }\n    /**\n     * @param figure {String}\n     * @param divElement {HTMLElement}\n     */\n    register({ figure, divElement }) {\n        let temporaryElement = null;\n\n        FUNC.attach(divElement, 'mousedown', e => {\n            const moverFigure = this.createMoverFigure();\n\n            const figureDiv = $figures.draw(figure, 1.05);\n            moverFigure.append(figureDiv);\n\n            FUNC.setStyle(moverFigure, {\n                left: this.getLeftPx(e.pageX) + 'px',\n                top: this.getTopPx(e.pageY) + 'px'\n            });\n\n            this.attachMoveEvents(moverFigure);\n            FUNC.setStyle(divElement, {\n                opacity: .4\n            });\n\n            temporaryElement = moverFigure;\n        });\n\n        FUNC.attach(CONSTANTS.dom, 'mouseup', e => {\n            if (!temporaryElement)\n                return;\n\n            temporaryElement.remove();\n            FUNC.setStyle(divElement, {\n                opacity: 1\n            })\n        });\n    }\n\n    /**\n     * @param divElement {HTMLElement}\n     */\n    getMouseMoveHandler(divElement) {\n        return e => {\n            const { pageX, pageY } = e;\n            FUNC.setStyle(divElement, {\n                left: this.getLeftPx(pageX) + 'px',\n                top: this.getTopPx(pageY) + 'px'\n            })\n        }\n    }\n\n    /**\n     * @param divElement {HTMLElement}\n     */\n    attachMoveEvents(divElement) {\n        const handler = this.getMouseMoveHandler(divElement);\n\n        FUNC.attach(\n            CONSTANTS.dom, 'mousemove', handler\n        )\n    }\n\n    getLeftPx($left) {\n        return $left - 30;\n    }\n\n    getTopPx($top) {\n        return $top - 60\n    }\n\n    createMoverFigure() {\n        let elem = FUNC.$('#mover-figure');\n        if (!elem) {\n            elem = FUNC.elt('div', 'position-absolute', 'mover-figure');\n            CONSTANTS.dom.body.append(elem);\n        }\n\n        return elem;\n    }\n}\n\nconst $figureMover = new FigureMover();\nexport default $figureMover;\n","const userAgent = navigator.userAgent.toLowerCase();\nconst Android = userAgent.indexOf(\"android\") > -1;\n\nexport default Android;","import CONFIG from \"../shared/store/Config\";\n\nconst CONSTANTS = {\n    dom: document,\n    width: CONFIG.getScreenWidth() * .9,\n    height: CONFIG.getScreenHeight(),\n    offsetY: CONFIG.getScreenHeight() * 0.1 + 20,\n    boxesOnRow: 8,\n    boxesOnColumn: 8,\n    figureOffsetX: -70,\n    figureOffsetY: -200,\n    boxColor: 'rgba(153, 93, 93)',\n    blockCrashColor: 'rgb(151, 96, 96)',\n    boxHeight: null,\n    boxWidth: null,\n    offsetX: null,\n};\n\n\nlet offsetVar = 0;\nlet boxHeightVar = (CONSTANTS.height * .7) / CONSTANTS.boxesOnColumn;\nlet boxWidthVar = (CONSTANTS.width - offsetVar) / CONSTANTS.boxesOnRow;\nboxWidthVar = boxHeightVar = Math.min(boxWidthVar, boxHeightVar);\n\nlet rightOffsetX = offsetVar + CONSTANTS.boxesOnRow * boxWidthVar\nrightOffsetX = CONSTANTS.width - rightOffsetX;\noffsetVar = (offsetVar + rightOffsetX) / 2 + 20;\n\nCONSTANTS.boxHeight = boxHeightVar;\nCONSTANTS.boxWidth = boxWidthVar;\nCONSTANTS.offsetX = offsetVar;\n\nexport default CONSTANTS;\n","import CONSTANTS from \"./Constants\";\n\nconst FUNC = {\n    $(id) {\n        return CONSTANTS.dom.querySelector(id);\n    },\n\n    dd(text) {\n        $('dd').innerText = text;\n    },\n\n    vv(text) {\n        $('vv').innerText = text;\n    },\n\n    attach($object, $event, $handler) {\n        $object.addEventListener($event, $handler);\n    },\n\n    detach($object, $event, $handler) {\n        $object.removeEventListener($event, $handler)\n    },\n\n    /**\n     * @param divElement {HTMLElement}\n     * @param className {string}\n     */\n    addClass(divElement, className) {\n        divElement.classList.add(className)\n    },\n\n    /**\n     * @param divElement {HTMLElement}\n     * @param className {string}\n     */\n    removeClass(divElement, className) {\n        divElement.classList.remove(className)\n    },\n\n    setStyle($element, $style) {\n        for (let a in $style) {\n            $element.style[a] = $style[a]\n        }\n    },\n\n    elt($element, $classes, $id, $style) {\n        let elm = CONSTANTS.dom.createElement($element);\n        if ($classes) elm.className = $classes;\n        if ($id) elm.setAttribute('id', $id);\n        if ($style) this.setStyle(elm, $style)\n        return elm\n    }\n}\n\nexport default FUNC;","import FUNC from \"../general/Custom\";\n\nexport default class DomNegotiator {\n    /**\n     * @type {HTMLDivElement}\n     * @var _divElement\n     */\n\n    /**\n     * @param $element {HTMLElement|String}\n     */\n    constructor($element = null) {\n        if ($element && typeof $element === 'string') {\n            $element = FUNC.$($element);\n        }\n\n        this._divElement = $element;\n    }\n\n    /**\n     * @param $element {HTMLDivElement}\n     */\n    setElement($element) {\n        this._divElement = $element;\n    }\n\n    getElement() {\n        return this._divElement;\n    }\n\n    /**\n     * @param $element {HTMLElement}\n     */\n    append($element) {\n        this._divElement.append($element)\n    }\n\n    clearHtml() {\n        this._divElement.innerHTML = \"\";\n    }\n}","import Box from \"./leaves/Box\";\n\nclass Boxes {\n    /**\n     * @type {[]}\n     * @var _boxes\n     */\n    constructor() {\n        this.reset();\n    }\n\n    addRow() {\n        this._boxes.push([]);\n    }\n\n    addAt($i, { x, y }) {\n        this._boxes[$i].push(\n            new Box({ x, y })\n        );\n    }\n\n    get(i, j) {\n        return this._boxes[i][j];\n    }\n\n    reset() {\n        this._boxes = []\n    }\n}\n\nconst $boxes = new Boxes()\nexport default $boxes;","import Android from \"../../general/Android\";\n\nconst CONFIG = {\n    android: {\n        click: 'touchstart',\n        move: 'touchmove',\n        end: 'touchend'\n    },\n    ps: {\n        click: 'mousedown',\n        move: 'mousemove',\n        end: 'mouseup'\n    },\n    get(type) {\n        if (Android) {\n            if (!this.android[type]) {\n                throw new Exception(`${type} is not defined`)\n            }\n            return this.android[type]\n        }\n        if (!this.ps[type]) {\n            throw new Exception(`${type} is not defined`)\n        }\n        return this.ps[type];\n    },\n    coords(e) {\n        if (Android) {\n            return { x: e.touches[0].clientX, y: e.touches[0].clientY }\n        }\n        return { x: e.clientX, y: e.clientY }\n    },\n    getScreenWidth() {\n        if (Android) {\n            let ratio = window.devicePixelRatio || 1;\n            return screen.width * ratio;\n        }\n        return window.innerWidth;\n    },\n    getScreenHeight() {\n        if (Android) {\n            let ratio = window.devicePixelRatio || 1;\n            return screen.height * ratio;\n        }\n        return window.innerHeight\n    }\n}\n\nexport default CONFIG;","export default class Box {\n    constructor({ x, y }) {\n        /**\n         * @types int\n         */\n        this.x = x;\n        this.y = y;\n\n        /**\n         *\n         * @type {HTMLElement}\n         */\n        this.referenceDiv = null;\n\n        this.data = {};\n    }\n\n    /**\n     * @param $div {HTMLElement}\n     */\n    setReferenceDiv($div) {\n        this.referenceDiv = $div;\n    }\n\n    getCoordinateX() {\n        return this.x;\n    }\n\n    getCoordinateY() {\n        return this.y;\n    }\n\n}\n\n","\nconst STATE = {\n    relax: {\n        randomFigures: [],\n        /**\n         * @param figure {String} such as `TYPE_1`\n         * @param divElement {HTMLElement}\n         */\n        addRandomFigure({ figure, divElement}) {\n            this.randomFigures.push({ figure, divElement });\n        },\n        getFigures() {\n            return this.randomFigures;\n        },\n        clear() {\n            this.randomFigures = [];\n        }\n    }\n}\n\nexport default STATE;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/app.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}