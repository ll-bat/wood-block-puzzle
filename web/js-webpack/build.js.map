{"version":3,"sources":["webpack://project-webpack/./src/app.js","webpack://project-webpack/./src/core/drawer/Layout.js","webpack://project-webpack/./src/general/Android.js","webpack://project-webpack/./src/general/Constants.js","webpack://project-webpack/./src/general/Custom.js","webpack://project-webpack/./src/negotiators/DomNegotiator.js","webpack://project-webpack/./src/shared/store/Boxes.js","webpack://project-webpack/./src/shared/store/Config.js","webpack://project-webpack/./src/shared/store/leaves/Box.js","webpack://project-webpack/webpack/bootstrap","webpack://project-webpack/webpack/runtime/define property getters","webpack://project-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://project-webpack/webpack/runtime/make namespace object","webpack://project-webpack/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;AAA2C;AACa;;AAExD,2BAA2B,+DAAa;AACxC,8DAAa;AACb,6DAAY,G;;;;;;;;;;;;;;;;;ACLkC;AACE;AACR;;AAExC;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,8DAAY;;AAEpB,uBAAuB,KAAK,qEAAuB,CAAC;AACpD,YAAY,+DAAa;;AAEzB,2BAA2B,KAAK,kEAAoB,CAAC;AACrD,6BAA6B,gEAAkB,QAAQ,+DAAiB;AACxE,6BAA6B,iEAAmB,OAAO,+DAAiB;;AAExE,gBAAgB,8DAAY,KAAK,OAAO;AACxC;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,KAAK,qEAAuB,CAAC;AACpD,2BAA2B,KAAK,kEAAoB,CAAC;AACrD,4BAA4B,4DAAU;AACtC;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;AACA,iBAAiB,wDAAQ;AACzB;AACA,oBAAoB,gEAAkB;AACtC,qBAAqB,iEAAmB;AACxC;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iEAAe,OAAO,E;;;;;;;;;;;;;;AC1EtB;AACA;;AAEA,iEAAe,OAAO,E;;;;;;;;;;;;;;;ACHsB;;AAE5C;AACA;AACA,WAAW,wEAAqB;AAChC,YAAY,yEAAsB;AAClC,aAAa,yEAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;AChCW;;AAEpC;AACA;AACA,eAAe,iEAA2B;AAC1C,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,kBAAkB,iEAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,IAAI,E;;;;;;;;;;;;;;;ACtCkB;;AAEtB;AACf;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,uBAAuB,sDAAM;AAC7B;;AAEA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;;;;ACrC+B;;AAE/B;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA,gBAAgB,gDAAG,EAAE,OAAO;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iEAAe,MAAM,E;;;;;;;;;;;;;;;AC/BuB;;AAE5C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,YAAY,qDAAO;AACnB;AACA,uCAAuC,KAAK;AAC5C;AACA;AACA;AACA;AACA,mCAAmC,KAAK;AACxC;AACA;AACA,KAAK;AACL;AACA,YAAY,qDAAO;AACnB,oBAAoB;AACpB;AACA,gBAAgB;AAChB,KAAK;AACL;AACA,YAAY,qDAAO;AACnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,YAAY,qDAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,MAAM,E;;;;;;;;;;;;;;AC/CN;AACf,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;UChCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"build.js","sourcesContent":["import $layout from \"./core/drawer/Layout\";\nimport DomNegotiator from \"./negotiators/DomNegotiator\";\n\nconst $domNegotiator = new DomNegotiator('#content');\n$layout.setup($domNegotiator);\n$layout.draw();","import $boxes from \"../../shared/store/Boxes\";\nimport CONSTANTS from \"../../general/Constants\";\nimport FUNC from \"../../general/Custom\";\n\nclass Layout {\n    /**\n     * @type {DomNegotiator}\n     * @var _domNegotiator\n     */\n\n    constructor() {\n        this._domNegotiator = null;\n    }\n\n    /**\n     * @param layoutNegotiator {DomNegotiator}\n     */\n    setup(layoutNegotiator) {\n        this._domNegotiator = layoutNegotiator;\n    }\n\n    draw() {\n        this.initBoxes()\n        this.drawLayout();\n    }\n\n    initBoxes() {\n        $boxes.reset()\n\n        for (let i = 0; i < CONSTANTS.boxesOnColumn; i++) {\n            $boxes.addRow();\n\n            for (let j = 0; j < CONSTANTS.boxesOnRow; j++) {\n                let x = j * (CONSTANTS.boxWidth + 1) + CONSTANTS.offsetX\n                let y = i * (CONSTANTS.boxHeight + 1) +CONSTANTS.offsetY\n\n                $boxes.addAt(i, { x, y });\n            }\n        }\n    }\n\n    drawLayout() {\n        this._domNegotiator.clearHtml();\n\n        for (let i = 0; i < CONSTANTS.boxesOnColumn; i++) {\n            for (let j = 0; j < CONSTANTS.boxesOnRow; j++) {\n                const box = $boxes.get(i,j);\n                this.drawOneBlock(box)\n            }\n        }\n    }\n\n    /**\n     * @param box {Box}\n     */\n    drawOneBlock(box) {\n        let el = FUNC.elt('div', \"box\", null, {\n            position: 'absolute',\n            width: (CONSTANTS.boxWidth) + \"px\",\n            height: (CONSTANTS.boxHeight) + \"px\",\n            left: box.getCoordinateX() + 'px',\n            top: box.getCoordinateY() + 'px',\n            background: '#1E1E1E', //rgba(0,0,0,.02)\n            border: '2px solid black' //1px solid rgba(0,0,0,.051)\n        })\n\n        el.onmousedown = (e) => e.preventDefault()\n\n        this._domNegotiator.append(el)\n        box.setReferenceDiv(el);\n    }\n}\n\nconst $layout = new Layout();\nexport default $layout;","const userAgent = navigator.userAgent.toLowerCase();\nconst Android = userAgent.indexOf(\"android\") > -1;\n\nexport default Android;","import CONFIG from \"../shared/store/Config\";\n\nconst CONSTANTS = {\n    dom: document,\n    width: CONFIG.getScreenWidth() * .9,\n    height: CONFIG.getScreenHeight(),\n    offsetY: CONFIG.getScreenHeight() * 0.1 + 20,\n    boxesOnRow: 8,\n    boxesOnColumn: 8,\n    figureOffsetX: -70,\n    figureOffsetY: -200,\n    boxColor: 'rgba(153, 93, 93)',\n    blockCrashColor: 'rgb(151, 96, 96)',\n    boxHeight: null,\n    boxWidth: null,\n    offsetX: null,\n};\n\n\nlet offsetVar = 0;\nlet boxHeightVar = (CONSTANTS.height * .7) / CONSTANTS.boxesOnColumn;\nlet boxWidthVar = (CONSTANTS.width - offsetVar) / CONSTANTS.boxesOnRow;\nboxWidthVar = boxHeightVar = Math.min(boxWidthVar, boxHeightVar);\n\nlet rightOffsetX = offsetVar + CONSTANTS.boxesOnRow * boxWidthVar\nrightOffsetX = CONSTANTS.width - rightOffsetX;\noffsetVar = (offsetVar + rightOffsetX) / 2 + 20;\n\nCONSTANTS.boxHeight = boxHeightVar;\nCONSTANTS.boxWidth = boxWidthVar;\nCONSTANTS.offsetX = offsetVar;\n\nexport default CONSTANTS;\n","import CONSTANTS from \"./Constants\";\n\nconst FUNC = {\n    $(id) {\n        return CONSTANTS.dom.querySelector(id);\n    },\n\n    dd(text) {\n        $('dd').innerText = text;\n    },\n\n    vv(text) {\n        $('vv').innerText = text;\n    },\n\n    attach($object, $event, $handler) {\n        $object.addEventListener($event, $handler);\n    },\n\n    detach($object, $event, $handler) {\n        $object.removeEventListener($event, $handler)\n    },\n\n    setStyle($element, $style) {\n        for (let a in $style) {\n            $element.style[a] = $style[a]\n        }\n    },\n\n    elt($element, $classes, $id, $style) {\n        let elm = CONSTANTS.dom.createElement($element);\n        if ($classes) elm.className = $classes;\n        if ($id) elm.setAttribute('id', $id);\n        if ($style) this.setStyle(elm, $style)\n        return elm\n    }\n}\n\nexport default FUNC;","import FUNC from \"../general/Custom\";\n\nexport default class DomNegotiator {\n    /**\n     * @type {HTMLDivElement}\n     * @var _divElement\n     */\n\n    constructor($element = null) {\n        if ($element && typeof $element === 'string') {\n            $element = FUNC.$($element);\n        }\n\n        this._divElement = $element;\n    }\n\n    /**\n     * @param $element {HTMLDivElement}\n     */\n    setElement($element) {\n        this._divElement = $element;\n    }\n\n    getElement() {\n        return this._divElement;\n    }\n\n    /**\n     * @param $element {HTMLElement}\n     */\n    append($element) {\n        this._divElement.append($element)\n    }\n\n    clearHtml() {\n        this._divElement.innerHTML = \"\";\n    }\n}","import Box from \"./leaves/Box\";\n\nclass Boxes {\n    /**\n     * @type {[]}\n     * @var _boxes\n     */\n    constructor() {\n        this.reset();\n    }\n\n    addRow() {\n        this._boxes.push([]);\n    }\n\n    addAt($i, { x, y }) {\n        this._boxes[$i].push(\n            new Box({ x, y })\n        );\n    }\n\n    get(i, j) {\n        return this._boxes[i][j];\n    }\n\n    reset() {\n        this._boxes = []\n    }\n}\n\nconst $boxes = new Boxes()\nexport default $boxes;","import Android from \"../../general/Android\";\n\nconst CONFIG = {\n    android: {\n        click: 'touchstart',\n        move: 'touchmove',\n        end: 'touchend'\n    },\n    ps: {\n        click: 'mousedown',\n        move: 'mousemove',\n        end: 'mouseup'\n    },\n    get(type) {\n        if (Android) {\n            if (!this.android[type]) {\n                throw new Exception(`${type} is not defined`)\n            }\n            return this.android[type]\n        }\n        if (!this.ps[type]) {\n            throw new Exception(`${type} is not defined`)\n        }\n        return this.ps[type];\n    },\n    coords(e) {\n        if (Android) {\n            return { x: e.touches[0].clientX, y: e.touches[0].clientY }\n        }\n        return { x: e.clientX, y: e.clientY }\n    },\n    getScreenWidth() {\n        if (Android) {\n            let ratio = window.devicePixelRatio || 1;\n            return screen.width * ratio;\n        }\n        return window.innerWidth;\n    },\n    getScreenHeight() {\n        if (Android) {\n            let ratio = window.devicePixelRatio || 1;\n            return screen.height * ratio;\n        }\n        return window.innerHeight\n    }\n}\n\nexport default CONFIG;","export default class Box {\n    constructor({ x, y }) {\n        /**\n         * @types int\n         */\n        this.x = x;\n        this.y = y;\n\n        /**\n         *\n         * @type {HTMLElement}\n         */\n        this.referenceDiv = null;\n\n        this.data = {};\n    }\n\n    /**\n     * @param $div {HTMLElement}\n     */\n    setReferenceDiv($div) {\n        this.referenceDiv = $div;\n    }\n\n    getCoordinateX() {\n        return this.x;\n    }\n\n    getCoordinateY() {\n        return this.y;\n    }\n\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/app.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}